# -----------------------------------------------------------------------
# [y] hybris Platform
#
# Copyright (c) 2018 SAP SE or an SAP affiliate company.  All rights reserved.
#
# This software is the confidential and proprietary information of SAP
# ("Confidential Information"). You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the
# license agreement you entered into with SAP.
# -----------------------------------------------------------------------
# you can put key/value pairs here.
# Use Config.getParameter(..) to retrieve the values during runtime.


# Specifies the location of the spring context file putted automatically to the global platform application context.
hospitalcore.application-context=hospitalcore-spring.xml

# PaymentInfo validates that the card number is plausible.
# Setting paymentinfo.creditcard.checknumber=false will prevent PaymentInfo.createItem()
# from throwing an exception if the card number is invalid.
paymentinfo.creditcard.checknumber=false


# Change the limit on the number of facet values returned per facet.
# This needs to be greater than the number of categories in the system.
facet.limit.default=500

# Import config properties into impex macros  for modulegen
jarResourceCmsValue=jar:org.training.hospital.core.setup.CoreSystemSetup&/hospitalcore/import/cockpits/cmscockpit
jarResource=jar:org.training.hospital.core.setup.CoreSystemSetup&/hospitalcore/import/common/
emailResourceValue=jar:org.training.hospital.core.setup.CoreSystemSetup&/hospitalcore/import/emails
emailContextPackageName=org.training.hospital.facades.process.email.context

# Import config properties into impex macros for solr
solr.server.mode=standalone

# This property is used to identify which quotes are going to expire soon
quotetoexpiresoonjob.daystoexpire=3

#local.properties log4j

log4j2.name=PropertiesConfig
log4j2.appenders = medicalImpexFilter
log4j2.appender.medicalImpexFilter.type = RollingFile
log4j2.appender.medicalImpexFilter.name = medicalImpexFilter
log4j2.appender.medicalImpexFilter.fileName = ${sys:HYBRIS_LOG_DIR}/medicalImpexFilter/medicalImpexFilter.log
log4j2.appender.medicalImpexFilter.filePattern =${sys:HYBRIS_LOG_DIR}/medicalImpexFilter/medicalImpexFilter-%d{MM-dd-yy}-%i.log
log4j2.appender.medicalImpexFilter.layout.type = PatternLayout
log4j2.appender.medicalImpexFilter.layout.pattern = [%d] %-5p [%t] %X{RemoteAddr}%X{CronJob}[%c{1}] %m%n
log4j2.appender.medicalImpexFilter.policies.type = Policies
log4j2.appender.medicalImpexFilter.policies.time.type = TimeBasedTriggeringPolicy
log4j2.appender.medicalImpexFilter.policies.time.interval = 2
log4j2.appender.medicalImpexFilter.policies.time.modulate = true
log4j2.appender.medicalImpexFilter.policies.size.type = SizeBasedTriggeringPolicy
log4j2.appender.medicalImpexFilter.policies.size.size=100MB
log4j2.appender.medicalImpexFilter.strategy.type = DefaultRolloverStrategy
log4j2.appender.medicalImpexFilter.strategy.max = 5
log4j2.loggers=medicalImpexFilterLogger
log4j2.logger.medicalImpexFilterLogger.name = org.training.hospital.core.converter.impl
log4j2.logger.medicalImpexFilterLogger.additivity = true
log4j2.logger.medicalImpexFilterLogger.appenderRefs = medicalImpexFilter
log4j2.logger.medicalImpexFilterLogger.appenderRef.medicalImpexFilter.ref = medicalImpexFilter
log4j2.logger.medicalImpexFilterLogger.level = debug






